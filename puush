#!/bin/bash
# Puush for Linux (https://github.com/jacklul/puush-linux)
#  by Jack'lul <www.jacklul.com>
#
# This script is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License (LGPL) as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
# 
# This script is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
# 
# You should have received a copy of the GNU Lesser General Public
# License along with this script. If not, see <http://www.gnu.org/licenses/>.
# 
##################

# Simple function to check if package is installed
function checkDependency() 
{
	if ! which $1 >/dev/null; then
		if [ -t 1 ] ; then
			printf "Failed to find required command '$1', check dependencies!\n" "$1"
		else
			notify-send "puush error!" "Failed to find required command '$1', check dependencies!" -t 5000 -i "/usr/share/pixmaps/puush.png"
		fi

		exit 1
	fi
}

# $1: fileName (Required)
# $2: delete after use (Not required. Default: false)
function puushFile()
{
	if [[ -z "$1" ]]; then
		return
	fi
	
	if ! [ -f "$1" -a -r "$1" ] ; then
		printf "File '$1' is not a valid file or is not readable.\n"
		return
	fi
	
	if ! [ -t 1 ] ; then
		notify-send "puush" "Uploading..." -t 1500 -i "/usr/share/pixmaps/puush.png"
	fi

	result=`curl "https://puush.me/api/up" -# -F "k=$PUUSH_API_KEY" -F "z=lulz" -F "f=@$1" | sed -E 's/^.+,(.+),.+,.+$/\1\n/'`

	if [ "$2" = true ]; then
	    /bin/rm "$1"
	fi

	printf "$result"
}

# Need help?
function printHelp ()
{
	printf "puush-linux by Jack'lul <www.jacklul.com>\n"
	printf " GitHub: https://github.com/jacklul/puush-linux\n"
	printf "\n"
	printf "Usage:\n"
	printf "  puush [OPTION] [FILE]\n"
	printf "\n"
	printf "OPTIONS:\n"
	printf "  -d, --desktop		puush entire desktop\n"
	printf "  -w, --window		puush current window\n"
	printf "  -a, --area		select area to puush\n"
	printf "  -f, --file		puush specific file (opens file dialog)\n"
	printf "  -h, --help		shows this help\n"
	printf "\n"
	printf "FILE specifies path to file you want to upload, must be used\n without parameters.\n"
	printf "\n"
}

###################
# LETS BEGIN

# Check for required commands
checkDependency "scrot"
checkDependency "curl"
checkDependency "xclip"
checkDependency "notify-send"

# Check for configuration, if it doesn't exist create it and ask user for API key
if ! [ -f "$HOME/.config/puush/puush.conf" ] ; then
	printf "Configuration file is missing, creating new one...\n"
	
	if mkdir -p $HOME/.config/puush/; then
		if [ -t 1 ] ; then
			printf "\n(You can find your API key at http://puush.me/account/settings)\n"
			read -p "API key: " apikey
			printf "\n"
		fi

		printf "# puush-linux configuration file\n
# API key (You can find your API key at http://puush.me/account/settings)
PUUSH_API_KEY=$apikey
\n" > $HOME/.config/puush/puush.conf
		
		. $HOME/.config/puush/puush.conf
	else
		exit 1
	fi
else
	. $HOME/.config/puush/puush.conf
fi

# Handle empty API key or no parameter
if [ -z "$PUUSH_API_KEY" ]; then
	if [ -t 1 ] ; then
		printf "Missing required configuration variable 'PUUSH_API_KEY'!\n"
		printf "Please set it in '$HOME/.config/puush/puush.conf'.\n"
	else
		notify-send "Missing required configuration variable 'PUUSH_API_KEY'!" "Please set it in '$HOME/.config/puush/puush.conf'." -t 5000 -i "/usr/share/pixmaps/puush.png"
	fi
	exit 1
elif [ -z "$1" ]; then
	printf "Try 'puush --help' for usage informations.\n"
	exit 1
fi

fileName="/tmp/$(date '+%Y%m%d%H%I%S').png"
fileURL=""

# Get file to puush and puush it
case "$1" in
	-d|--desktop|--d)
			scrot "$fileName"	
			if [ $? -eq 0 ]; then			
				fileURL=`puushFile "$fileName" true`
			else
				exit 1
			fi
		;;
	-w|--window|--w)
			scrot -bu "$fileName"
			if [ $? -eq 0 ]; then			
				fileURL=`puushFile "$fileName" true`
			else
				exit 1
			fi
		;;
	-a|--area|--a)
			scrot -s "$fileName"
			if [ $? -eq 0 ]; then
				fileURL=`puushFile "$fileName" true`
			else
				exit 1
			fi
		;;
	-f|--file|--f)
			checkDependency "zenity"
			fileName=`zenity --file-selection`
			if ! [ -z "$fileName" ] ; then
				fileURL=`puushFile "$fileName" false`
			else
				exit 1
			fi
		;;
	-h|--help|--h)
			printHelp
			exit 1
		;;
	*)
			fileName=$1
			fileURL=`puushFile "$fileName" false`
		;;
esac

# Show results, copy link to clipboard if upload was successful, otherwise show error
if printf "$fileURL" | grep -q "puu.sh"  ; then
	printf $fileURL | xclip -selection "clipboard"
	
	if [ -t 1 ] ; then
		printf "$fileURL\n"
	else
		notify-send "puush complete!" "$fileURL" -t 3000 -i "/usr/share/pixmaps/puush.png"
	fi
else
	if [ -t 1 ] ; then
		printf "Error: $fileURL\n"
	else
		notify-send "puush error!" "$fileURL" -t 5000 -i "/usr/share/pixmaps/puush.png"
	fi
fi
